openapi: 3.0.0
info:
  title: OA-Pank API
  version: 1.0.0
  description: API documentation for OA-Pank banking system

servers:
  - url: http://localhost:3000
    description: Development server

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionId
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error message
        error:
          type: string
          example: Detailed error message
    User:
      type: object
      properties:
        _id:
          type: string
          example: 60d21b4667d0d8992e610c85
        username:
          type: string
          example: johndoe
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: john.doe@example.com
        role:
          type: string
          enum: [user, admin]
          example: user
        isActive:
          type: boolean
          example: true
        lastLogin:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserInput:
      type: object
      required:
        - username
        - password
        - firstName
        - lastName
        - email
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 30
          example: johndoe
        password:
          type: string
          minLength: 6
          example: password123
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
    LoginInput:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: password123
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        user:
          $ref: '#/components/schemas/User'
    Account:
      type: object
      properties:
        _id:
          type: string
          example: 60d21b4667d0d8992e610c85
        accountNumber:
          type: string
          example: OAP12345678
        user:
          type: string
          example: 60d21b4667d0d8992e610c85
        balance:
          type: number
          format: float
          example: 1000.00
        currency:
          type: string
          enum: [EUR, USD, GBP]
          example: EUR
        isActive:
          type: boolean
          example: true
        type:
          type: string
          enum: [checking, savings, investment]
          example: checking
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AccountInput:
      type: object
      required:
        - currency
        - type
      properties:
        currency:
          type: string
          enum: [EUR, USD, GBP]
          example: EUR
        type:
          type: string
          enum: [checking, savings, investment]
          example: checking
    Transaction:
      type: object
      properties:
        _id:
          type: string
          example: 60d21b4667d0d8992e610c85
        transactionId:
          type: string
          example: OAP-1620000000000-12345
        fromAccount:
          type: string
          example: OAP12345678
        toAccount:
          type: string
          example: OAP87654321
        amount:
          type: number
          format: float
          example: 100.00
        currency:
          type: string
          enum: [EUR, USD, GBP]
          example: EUR
        status:
          type: string
          enum: [pending, inProgress, completed, failed]
          example: completed
        type:
          type: string
          enum: [internal, external]
          example: internal
        description:
          type: string
          example: Payment for services
        errorMessage:
          type: string
          nullable: true
        initiatedBy:
          type: string
          example: 60d21b4667d0d8992e610c85
        signature:
          type: string
          nullable: true
        senderBank:
          type: string
          nullable: true
        receiverBank:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    TransactionInput:
      type: object
      required:
        - fromAccount
        - toAccount
        - amount
        - currency
      properties:
        fromAccount:
          type: string
          example: OAP12345678
        toAccount:
          type: string
          example: OAP87654321
        amount:
          type: number
          format: float
          minimum: 0.01
          example: 100.00
        currency:
          type: string
          enum: [EUR, USD, GBP]
          example: EUR
        description:
          type: string
          example: Payment for services
    JWKSResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            type: object
            properties:
              kty:
                type: string
                example: RSA
              use:
                type: string
                example: sig
              kid:
                type: string
                example: 1
              n:
                type: string
              e:
                type: string
                example: AQAB

paths:
  /sessions/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Creates a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  
  /sessions/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticates a user and creates a session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




  /sessions/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      description: Invalidates the user's session
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Logged out successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /.well-known/jwks.json:
    get:
      tags:
        - JWKS
      summary: Get JSON Web Key Set
      description: Returns the JSON Web Key Set used for verifying JWT tokens
      responses:
        '200':
          description: JWKS retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWKSResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




  /users/profile:
    get:
      tags:
        - Users
      summary: Get current user profile
      description: Returns the currently authenticated user's information
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Returns a user by their ID (admin only)
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /accounts:
    get:
      tags:
        - Accounts
      summary: Get user accounts
      description: Returns all accounts belonging to the authenticated user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Accounts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Accounts
      summary: Create new account
      description: Creates a new bank account for the authenticated user
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInput'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  account:
                    $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'






  /accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Get account by ID
      description: Returns a specific account by its ID
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Account ID
      responses:
        '200':
          description: Account retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  account:
                    $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  
  /transactions:
    get:
      tags:
        - Transactions
      summary: Get user transactions
      description: Returns all transactions related to the authenticated user's accounts
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Transactions
      summary: Create new transaction
      description: Initiates a new transaction from one account to another
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInput'
      responses:
        '201':
          description: Transaction initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  transaction:
                    $ref: '#/components/schemas/Transaction'
        '400':